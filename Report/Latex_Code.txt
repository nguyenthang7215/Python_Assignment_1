\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{array}
\usepackage{longtable}
\usepackage{booktabs}
\usepackage{geometry}
\usepackage{amsmath}
\usepackage{xcolor}
\usepackage{setspace}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{titlesec}
\usepackage{enumitem}

% Page layout
\geometry{a4paper, margin=1in}
\setlength{\parindent}{0pt}
\setlength{\parskip}{1em}
\renewcommand{\baselinestretch}{1.15}

% Section formatting
\titleformat{\section}
  {\normalfont\Large\bfseries}{\thesection}{1em}{}
\titleformat{\subsection}
  {\normalfont\large\bfseries}{\thesubsection}{1em}{}
\titleformat{\subsubsection}
  {\normalfont\normalsize\bfseries}{\thesubsubsection}{1em}{}

% Custom colors
\definecolor{ptitblack}{RGB}{0, 51, 102}
\definecolor{sectiongray}{RGB}{100, 100, 100}

\begin{document}

\begin{titlepage}
    \centering
    \vspace*{1cm}
    
    \textcolor{ptitblue}{\textbf{\Large POST AND TELECOMMUNICATIONS INSTITUTE OF TECHNOLOGY}}
    
    \textcolor{ptitblue}{\textbf{\Large FACULTY OF INFORMATION TECHNOLOGY}}
    
    \vspace{1cm}
    \textcolor{ptitblue}{\textbf{\LARGE PYTHON PROGRAMMING}}
    
    \vspace{1.5cm}
    \includegraphics[width=0.5\textwidth]{Anh/LogoPtit.png}
    
    \vspace{1.5cm}
    \textcolor{ptitblue}{\textbf{\Huge PYTHON ASSIGNMENT 1}}
    
    \vspace{2cm}
    \begin{tabular}{ll}
        \textbf{\Large LECTURER} & : \Large KIM NGOC BACH \\
        \textbf{\Large STUDENT NAME} & : \Large NGUYEN TIEN THANG \\
        \textbf{\Large STUDENT ID} & : \Large B23DCCE088 \\
        \textbf{\Large CLASS} & : \Large D23CQCE04-B \\
    \end{tabular}
    
    \vfill
    \textcolor{ptitblue}{\textbf{Ha Noi -- 2025}}
\end{titlepage}

\tableofcontents
\newpage

\begin{center}
\section*{PREFACE}
\label{preface}
\end{center}
\vspace{2em} 

\begin{minipage}{\textwidth}
This report is the outcome of my efforts for Assignment 1 of the Python Programming course, focused on real-world data collection, statistical analysis, clustering, and predictive modeling using football player statistics from the English Premier League (2024–2025 season). The project offered me an opportunity to integrate multiple programming and data science skills into a single, cohesive analytical workflow.\\
Throughout this assignment, I worked extensively with web scraping tools such as Selenium and BeautifulSoup to collect rich, structured data from public sports databases. I applied data preprocessing and visualization techniques using pandas, NumPy, and Matplotlib to derive meaningful insights into player performance and team dynamics. By utilizing machine learning methods like KMeans clustering and Principal Component Analysis (PCA), I was able to explore natural groupings among players. Finally, I developed a regression model to estimate player transfer values based on performance statistics.\\
The completion of this assignment has deepened my understanding of Python’s capabilities in data analysis, strengthened my problem-solving skills, and enhanced my appreciation for the complexity and richness of sports analytics. I sincerely hope this report reflects the knowledge, effort, and dedication I have put into this project.
\end{minipage}

\vspace*{\fill} 

\newpage

\newpage

\section{PART I -- DATA COLLECTION}
\label{part-i-data-collection}

\subsection{1. Assignment Requirements}
\label{assignment-requirements}

\begin{itemize}
\item Collect statistical data [*] for all players who have played more than 90 minutes in the 2024-2025 English Premier League season.
\item Data source: \url{https://fbref.com/en/}
\item Save the result to a file named 'results.csv', where the result table has the following structure:
\begin{itemize}
\item Each column corresponds to a statistic.
\item Players are sorted alphabetically by their first name.
\item Any statistic that is unavailable or inapplicable should be marked as "N/a".
\end{itemize}
\item [*] The required statistics are:
\begin{itemize}
\item \textbf{Nation}
\item \textbf{Team}
\item \textbf{Position}
\item \textbf{Age}
\item \textbf{Playing Time}: matches played, starts, minutes
\item \textbf{Performance}: goals, assists, yellow cards, red cards
\item \textbf{Expected}: expected goals (xG), expedted Assist Goals (xAG)
\item \textbf{Progression}: PrgC, PrgP, PrgR
\item \textbf{Per 90 minutes}: Gls, Ast, xG, xGA
\item \textbf{Goalkeeping}:
\begin{itemize}
\item Performance: goals against per 90mins (GA90), Save\%, CS\%
\item Penalty Kicks: penalty kicks Save\%
\end{itemize}
\item \textbf{Shooting}:
\begin{itemize}
\item Standard: shoots on target percentage (SoT\%), Shoot on Target per 90min (SoT/90), goals/shot (G/sh), average shoot distance (Dist)
\end{itemize}
\item \textbf{Passing}:
\begin{itemize}
\item Total: passes completed (Cmp),Pass completion (Cmp\%), progressive passing distance (TotDist)
\item Short: Pass completion (Cmp\%),
\item Medium: Pass completion (Cmp\%),
\item Long: Pass completion (Cmp\%),
\item Expected: key passes (KP), pass into final third (1/3), pass into penalty area (PPA), CrsPA, PrgP
\end{itemize}
\item \textbf{Goal and Shot Creation}:
\begin{itemize}
\item SCA: SCA, SCA90
\item GCA: GCA, GCA90
\end{itemize}
\item \textbf{Defensive Actions}:
\begin{itemize}
\item Tackles: Tkl, TklW
\item Challenges: Att, Lost
\item Blocks: Blocks, Sh, Pass, Int
\end{itemize}
\item \textbf{Possession}:
\begin{itemize}
\item Touches: Touches, Def Pen, Def 3rd, Mid 3rd, Att 3rd, Att Pen
\item Take-Ons: Att, Succ\%, Tkld\%
\item Carries: Carries, ProDist, ProgC, 1/3, CPA, Mis, Dis
\item Receiving: Rec, PrgR
\end{itemize}
\item \textbf{Miscellaneous Stats}:
\begin{itemize}
\item Performance: Fls, Fld, Off, Crs, Recov
\item Aerial Duels: Won, Lost, Won\%
\end{itemize}
\end{itemize}
\end{itemize}

\subsection{2. Assignment Breakdown}
\label{assignment-breakdown}

\begin{enumerate}
\item \textbf{Web Scraping:} Extract player data from the given URLs using Selenium and Beautiful Soup.
\item \textbf{Data Extraction:} Extract data into Pandas DataFrames.
\item \textbf{Data Merging:} Merge DataFrames on common keys.
\item \textbf{Data Filtering:} Filter players based on the "minutes played" criterion.
\item \textbf{Data Cleaning:}
\begin{itemize}
\item Handle missing values.
\item Format the data (e.g., convert data types).
\end{itemize}
\item \textbf{Data Structuring:} Organize the data into a Pandas DataFrame.
\item \textbf{Sorting:} Sort the DataFrame by the player's first name.
\item \textbf{Saving to CSV:} Save the DataFrame to a CSV file.
\end{enumerate}

\newpage

\subsection{3. Solution Approach}

\begin{enumerate}

\item \textbf{Import necessary libraries.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=1.3in]{Anh/Screenshot 2025-05-09 232731.png}
\end{figure}

\begin{itemize}
    \item selenium.webdriver : Automate and control web browser.
    \item BeautifulSoup : Parse and navigate the HTML content.
    \item pandas : Handle tabular data: merge, filter, clean, and export.
    \item time : Pause program execution to allow page loading.
    \item io.StringIO : Convert string to file-like object for pandas to read.
    \item os: Interact with the operating system, check for file paths, create folders, and manage directories.
\end{itemize}


\item \textbf{Initialize the webdriver and declare the URLs containing the statistical tables.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/P1.2.png}
\end{figure}

\begin{itemize}
    \item Launch the Chrome WebDriver to programmatically control a Chrome browser.
    
    \item Declare a dictionary of links to each statistical table on \url{https://fbref.com/en/}, using the table's HTML id as the key (e.g., \texttt{"stats\_standard"}, \texttt{"stats\_shooting"}).
    
    \item This organization simplifies parsing and merging later on.
\end{itemize}

\newpage

\item \textbf{Scrape and Parse HTML Tables using BeautifulSoup and Pandas}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-03 100815.png}
\end{figure}

\begin{itemize}
    \item Use Selenium to open each URL and retrieve the full page source after allowing time for full loading.
    \item Parse the HTML with BeautifulSoup.
    \item Locate the desired <table> using its unique ID.
    \item Extract the table's contents into a Pandas DataFrame.
    \item Clean the table:
    \begin{itemize}
        \item Remove the first unnamed index column
        \item Store each cleaned DataFrame in a dictionary for merging later.
    \end{itemize}
    \item Close the browser once all tables have been scraped.
\end{itemize}


\item \textbf{Merge all DataFrames into the main stats\_standard table}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-03 110222.png}
\end{figure}

\newpage

\begin{itemize}
    \item Start with the stats\_standard table as the base DataFrame. Loop through all other statistical tables:
    \begin{itemize}
        \item Remove extra header rows (where 'Player' equals 'Player').
        \item Rename columns to avoid naming conflicts by prefixing them with the table's id.
        \item Merge each cleaned table into the main DataFrame df\_result using a left join on Player, Nation, Squad, and Pos columns.
    \end{itemize}
    
\end{itemize}

\item \textbf{Select 78 specific statistic columns as required by the assignment}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/cot1,1.png}
\end{figure}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/cot1,2.png}
\end{figure}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/cot1,3.png}
\end{figure}

\newpage

\begin{itemize}
    \item Create a list named \texttt{columns\_to\_keep} containing 78 specific columns from different statistical tables. These include:
    \begin{itemize}
        \item player information
        \item performance stats
        \item goalkeeping
        \item shooting
        \item passing
        \item defensive actions 
        \item possession
        \item miscellaneous stats
    \end{itemize}
    (Selected based on the assignment's requirements)
    
    \item This ensures only relevant data will be kept for analysis and CSV export later.
\end{itemize}

\newpage

\item \textbf{Clean and process the data}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 233032.png}
\end{figure}

\begin{itemize}
\item This step selects the required 78 columns.
\item Fill all missing or blank values with "N/a" for consistency.
\item Extract the capitalized nationality code from the 'Nation' column.
\item Convert the 'Min' (minutes played) field to numeric and drop rows where value $\leq$ 90.
\item Sort the DataFrame alphabetically by 'Player' for easier readability and comparison.
\end{itemize}

\item \textbf{Save the data}

\begin{figure}[h]
    \centering
    \includegraphics[width=4.3in, height=0.8in]{Anh/Screenshot 2025-05-09 232944.png}
\end{figure}

\begin{itemize}
\item These lines saves the cleaned and processed DataFrame to a CSV file named results.csv without including the row index.
\end{itemize}
\end{enumerate}

\newpage

\subsection{4. Results}

\begin{itemize}
\item The primary result of Part I is the creation of the 'results.csv' file.
\item This CSV file contains player statistics for the 2024-2025 English Premier League season, including data on player information, playing time, performance, and more.
\item The data is organized in a table format, with each row representing a player and each column representing a statistic.
\item Players are sorted alphabetically, and missing data is represented by 'N/a'.
\item Example :

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 233527.png}
\end{figure}

\end{itemize}

\newpage 

\section{PART II -- DATA ANALYSIS}

\subsection{1. Assignment Requirements}

\begin{itemize}
    \item Identify the top 3 players with the highest and lowest scores for each statistic. Save result to a file name 'top\_3.txt' 

    \item Find the median for each statistic. Calculate the mean and standard deviation for each statistic across all players and for each team. Save the results to a file named 'results2.csv' with the following format:
    
    \begin{tabular}{|c|c|c|c|c|c|c|}
    \hline
     &  & Median & Mean & Std & ... & ... \\
     &  & of & of & of &  &  \\
     &  & Att & Att & Att &  &  \\
     &  & tribute & tribute & tribute &  &  \\
     &  & 1 & 1 & 1 &  &  \\
    \hline
    0 & all &  &  &  &  &  \\
    \hline
    1 & Team &  &  &  &  &  \\
     & 1 &  &  &  &  &  \\
    \hline
    ... &  &  &  &  &  &  \\
    \hline
    n & Team &  &  &  &  &  \\
     & n &  &  &  &  &  \\
    \hline
    \end{tabular}
    
    \item Plot a histogram showing the distribution of each statistic for all players in the league and each team.
    \item Identify the team with the highest scores for each statistic. Based on your analysis, which team do you think is performing the best in the 2024-2025 Premier League season?
\end{itemize}


\subsection{2. Assignment Breakdown}

\begin{enumerate}
    \item \textbf{Load Data:} Load the "results.csv" file into a Pandas DataFrame.
    \item \textbf{Data Preprocessing:} Clean and transform the data as needed (e.g., handle data types).
    \item \textbf{Top/Bottom Players:} Find and save the top 3 highest and lowest players for each statistic.
    \item \textbf{Descriptive Statistics:} Calculate and save the median, mean, and standard deviation for each statistic.
    \item \textbf{Histograms:} Generate histograms to visualize the distribution of statistics.
    \item \textbf{Team Performance:} Identify the best-performing team based on the statistics.
\end{enumerate}

\newpage

\subsection{3. Solution Approach}

\begin{enumerate}
\item \textbf{Data Preparation.}

\begin{itemize}
\item \textbf{Import necessary libraries.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=0.7in]{Anh/Screenshot 2025-05-09 233228.png}
\end{figure}

\begin{itemize}
    \item pandas is used for data manipulation and analysis (like reading CSV files, transforming data, etc.).
    \item matplotlib.pyplot is used to create visualizations like histograms.
    \item os: Interact with the operating system, check for file paths, create folders, and manage directories.
\end{itemize}

\item \textbf{Read and Preprocess Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=0.4in]{Anh/Screenshot 2025-05-09 233426.png}
\end{figure}

\begin{itemize}
\item Reads a CSV file named results.csv into a DataFrame called df.
\end{itemize}

\item \textbf{Preprocess Age Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-03 123711.png}
\end{figure}

\begin{itemize}
    \item The Age column is initially in the format XX-YY (e.g. 24-192 meaning 24 years and 192 days).
    \item This code splits it into two columns: Year and Day.
    \item Then it calculates the exact age in years with decimal and replaces the original Age column.
\end{itemize}

\end{itemize}
\newpage

\item \textbf{Top 3 highest and 3 lowest scores for each statistic.}

\begin{itemize}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 233707.png}
\end{figure}

\item \textbf{Iterate Through Statistical Columns to Determine the Top Team}
\begin{itemize}
    \item Iterate through all statistical columns, starting from the 5th column (after \texttt{Player}, \texttt{Nation}, \texttt{Squad}, \texttt{Pos})
    
    \item Convert each column to numeric values using:
    \begin{itemize}
        \item \texttt{pd.to\_numeric()} function
        \item Replace invalid entries with \texttt{NaN}
        \item Round all values to 2 decimal places for consistency
    \end{itemize}
    
    \item For each column:
    \begin{itemize}
        \item Use \texttt{nlargest(3, col)} to identify the top 3 players
        \item Use \texttt{nsmallest(3, col)} to identify the bottom 3 players
    \end{itemize}
\end{itemize}

\item \textbf{Export to Text File.}
\begin{itemize}
    \item Write the results to top\_3.txt with clear formatting, including player name, nationality, team, position, and the corresponding value.
\end{itemize}

\item \textbf{Example for Results.}

\begin{figure}[h]
    \centering
    \includegraphics[width=4.5in, height=2.5in]{Anh/Screenshot 2025-05-09 233814.png}
    
\end{figure}

\end{itemize}

\newpage

\item \textbf{The median for each statistic. The mean and standard deviation for each statistic across all players and for each team.}

\begin{itemize}
\item \textbf{Select Statistical Columns.}


\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=0.7in]{Anh/Screenshot 2025-05-03 133245.png}
\end{figure}

\begin{itemize}
\item We exclude the first 4 columns (usually identifiers like Player, Nation, Squad, Pos) and only keep the statistical performance metrics.
\end{itemize}

\item \textbf{Calculate Median, Mean, and Standard Deviation for Each Team.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-03 134651.png}
\end{figure}

\begin{itemize}
\item We group the data by Squad (team name), then compute median, mean, and standard deviation for each statistic. The multi-level column names created by .agg() are flattened into readable names (like "Mean of Goals"), and we reset the index for a clean tabular structure.
\end{itemize}

\item \textbf{Calculate Overall Median, Mean, and Standard Deviation for All Players.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=1in]{Anh/Screenshot 2025-05-03 135846.png}
\end{figure}

\begin{itemize}
\item Here, the code computes global statistics across all players (regardless of team):
\begin{itemize}
\item median: Middle value of each column
\item mean: Average of each column
\item std: Standard deviation of each column
\end{itemize}
\item All results are rounded to two decimal places.
\end{itemize}

\newpage

\item \textbf{Create a Row for Overall Dataset Summary.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=1.5in]{Anh/Screenshot 2025-05-03 140341.png}
\end{figure}

\begin{itemize}
    \item A dictionary named row is initialized to represent a summary of the entire dataset, labeled with "Squad": "all".
    \item For each column (statistic), the corresponding median, mean, and standard deviation are added to the dictionary.
    \item This dictionary is then converted into a one-row DataFrame (df\_all) to be appended later.
\end{itemize}


\item \textbf{Merge and Export the Final Table.}

\begin{figure}[h]
    \centering
    \includegraphics[width=4in, height=1in]{Anh/Screenshot 2025-05-09 234339.png}
\end{figure}

\begin{itemize}
    \item \texttt{pd.concat([df\_all, team], ignore\_index=True)} combines:
    \begin{itemize}
        \item The overall statistics row (\texttt{df\_all})
        \item The team-specific statistics table (\texttt{team})
    \end{itemize}
    into one unified table.
    
    \item \texttt{ignore\_index=True} ensures the row index is continuous and properly ordered.
    
    \item \texttt{to\_csv()} writes the final result to \texttt{results2.csv} for:
    \begin{itemize}
        \item Reporting
        \item Visualization
        \item Further analysis
    \end{itemize}
\end{itemize}
\newpage
\item \textbf{Example for Results.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 234427.png}
\end{figure}

\end{itemize}

\item \textbf{Plot a histogram showing the distribution of each statistic for all players in the league and each team ( 3 statistics for attacking and 3 statistics for defending).}

\begin{itemize}
    \item \textbf{Select Statistics to Visualize.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-04 150124.png}
\end{figure}

\begin{itemize}
    \item We manually define two sets of statistics:
    \begin{itemize}
        \item \textbf{Attacking stats}:
        \begin{itemize}
            \item \texttt{Gls} (Goals)
            \item \texttt{Ast} (Assists)
            \item \texttt{stats\_shooting\_G/Sh} (Goals per Shot)
        \end{itemize}
        
        \item \textbf{Defending stats}:
        \begin{itemize}
            \item \texttt{stats\_defense\_Tkl} (Tackles)
            \item \texttt{stats\_defense\_TklW} (Successful Tackles)
            \item \texttt{stats\_defense\_Blocks} (Blocks)
        \end{itemize}
    \end{itemize}
    These represent key performance indicators (KPIs) for evaluating:
    \begin{itemize}
        \item Offensive capabilities
        \item Defensive contributions
    \end{itemize}
\end{itemize}
\newpage
\item \textbf{Plot Histograms for All Players.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 235131.png}
\end{figure}

\begin{itemize}
    \item We loop through all selected statistics and plot a \textbf{histogram} to show how each stat is distributed across all players in the league.
    \begin{itemize}
    \item \texttt{plt.hist(...)}: Draws the histogram with 20 bins and a blue color.
    
    \item \texttt{safe\_col}: Replaces "/" with "\_" so the file can be saved without errors.
    
    \item \texttt{plt.savefig(...)}: Saves each plot as a PNG image in high resolution.
    \end{itemize}
\end{itemize}

\item \textbf{Plot Histograms for Each Team.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 235230.png}
\end{figure}

\begin{itemize}
    \item This section repeats the histogram process for \textbf{each team separately}, so you can compare how stats like goals or tackles vary \textbf{within} a specific squad.
    \begin{itemize}
    \item The loop for team in df["Squad"].unique() ensures that each team's histogram is created.
    \item Saved filenames include both team and stat names, like histogram\_Arsenal\_Gls.png.
    \end{itemize}
\end{itemize}

\newpage
\item \textbf{Example for Results.}
\begin{itemize}
\item Histogram for all players :

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/histogram_all_Ast.png}
\end{figure}
\newpage
\item Histogram for each teams :

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/histogram_Arsenal_Ast.png}
\end{figure}
\end{itemize}
\end{itemize}

\item \textbf{Identify the team with the highest scores for each statistic.}

\begin{itemize}
\item \textbf{Remove the Overall League Row.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 131458.png}
\end{figure}

\begin{itemize}
\item Previously added a row summarizing overall league stats. Now have to remove it to only compare actual teams when identifying top performers.
\end{itemize}

\item \textbf{Loop Over Each Statistic and Identify the Top Team.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 131810.png}
\end{figure}

\begin{itemize}
\item Loop through each player statistic (from column 4 onward).
\item Use "Mean of " + col to match the correct column in the table DataFrame.
\item idxmax() finds the row index where the value is highest → we get the team name and max value.
\item We count how many times each team leads in any statistic using a dictionary Count.
\end{itemize}

\item \textbf{Identify the Overall Best-Performing Team.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 131938.png}
\end{figure}

\begin{itemize}
    \item After counting all top-performing teams, we find which team led the most often.
    \begin{itemize}
    \item Max\_value is the largest count.
    \item Max\_team contains all teams that reached this number.
    This helps identify the most consistently dominant team across all stats.
    \end{itemize}
\end{itemize}

\item \textbf{Example for Results.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-09 224016.png}
\end{figure}

\end{itemize}

\end{enumerate}

\subsection{4. Results}

\begin{itemize}
    \item The code successfully loads the data from \texttt{results.csv}
    \item It calculates and saves the top 3 highest and 3 lowest players for each statistic to \texttt{top\_3.txt}
    \item It calculates and saves:
    \begin{itemize}
        \item Median
        \item Mean  
        \item Standard deviation
    \end{itemize}
    for each statistic (all players and per team) to \texttt{results2.csv}
    \item It generates histograms visualizing the distribution of specified statistics
    \item It identifies and prints the team(s) with:
    \begin{itemize}
        \item Most frequent highest scores
        \item Best overall performance
    \end{itemize}
\end{itemize}

\section{PART III -- PLAYER CLUSTERING}

\subsection{1. Assignment Requirements}

\begin{itemize}
    \item Use the K-means algorithm to classify players into groups based on their statistics.
    \item How many groups should the players be classified into? Why? Provide your comments on the results.
    \item Use PCA to reduce the data dimensions to 2, then plot a 2D cluster of the data points.
\end{itemize}

\subsection{2. Assignment Breakdown}

\begin{enumerate}
    \item \textbf{Data Loading and Preparation:} Load the cleaned data and prepare it for clustering.
    \item \textbf{K-Means Clustering:} Apply the K-means algorithm to group players.
    \item \textbf{Determine Optimal Clusters:} Determine the optimal number of clusters (k).
    \item \textbf{Dimensionality Reduction:} Use PCA to reduce the data to 2 dimensions.
    \item \textbf{Cluster Visualization:} Plot the clusters in a 2D scatter plot.
    \item \textbf{Result Interpretation:} Comment on the characteristics of the clusters.
\end{enumerate}

\subsection{3. Solution Approach}

\begin{enumerate}
\item \textbf{Data Preparation.}

\begin{itemize}
\item \textbf{Import necessary libraries.}

\begin{figure}[h]
    \centering
    \includegraphics[width=4in, height=1.5in]{Anh/Screenshot 2025-05-10 000619.png}
\end{figure}

\begin{itemize}
    \item \texttt{pandas}: Handles and manipulates data in tabular form (e.g., filtering, cleaning, merging).
    \item \texttt{numpy}: Provides support for large arrays and matrices, along with mathematical functions.
    \item \texttt{matplotlib.pyplot}: Used for creating visualizations like plots and charts.
    \item \texttt{sklearn.cluster.KMeans}: Performs K-Means clustering to group data into clusters.
    \item \texttt{sklearn.metrics.silhouette\_score}: Measures how well-defined the clusters are.
    \item \texttt{sklearn.preprocessing.StandardScaler}: Scales data to have a mean of 0 and a standard deviation of 1.
    \item \texttt{sklearn.decomposition.PCA}: Reduces dimensionality of data for easier visualization and analysis.
    \item os: Interact with the operating system, check for file paths, create folders, and manage directories.
\end{itemize}

\newpage 

\item \textbf{Read and Preprocess Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=3in, height=0.4in]{Anh/Screenshot 2025-05-10 000905.png}
\end{figure}

\begin{itemize}
\item Reads a CSV file named results.csv into a DataFrame called df.
\end{itemize}

\item \textbf{Preprocess Age Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-03 123711.png}
\end{figure}

\begin{itemize}
\item The Age column is initially in the format XX-YY (e.g. 24-192 meaning 24 years and 192 days).
\item This code splits it into two columns: Year and Day.
\item Then it calculates the exact age in years with decimal and replaces the original Age column.
\end{itemize}

\item \textbf{Handle Missing and Non-Numeric Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 135808.png}
\end{figure}

\begin{itemize}
\item Selects all columns starting from the 5th column onward (excluding Player, Nation, Squad, Pos).
\item Replaces any "N/a" entries with NaN using np.nan.
\item Converts all selected columns to numeric values; if conversion fails, values become NaN.
\item Replaces all missing values (NaN) with the mean of each respective column.
\end{itemize}
\end{itemize}
\newpage
\item \textbf{Standardize Data \& Evaluate Optimal Cluster Count.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 140648.png}
\end{figure}

\begin{itemize}
    \item The data is standardized using StandardScaler() to ensure all features are on the same scale.
    \item A loop from k = 2 to 29 runs KMeans clustering for each value of k.
    \item For each clustering, the following are stored:
    \begin{itemize}
    \item Inertia: how tight the clusters are.
    \item Silhouette score: how well-separated the clusters are.
    \end{itemize}
\end{itemize}

\item \textbf{Visualize Elbow \& Silhouette Methods.}

\begin{figure}[h]
    \centering
    \includegraphics[width=5in, height=3.3in]{Anh/Screenshot 2025-05-10 001022.png}
\end{figure}

\begin{itemize}
\item Two plots help evaluate the optimal value of k:
\begin{itemize}
\item Elbow Method: Looks for the point where inertia stops decreasing sharply.
\item Silhouette Method: Chooses k with high separation between clusters.
\end{itemize}
\end{itemize}
\newpage
\item \textbf{Apply Clustering with Chosen k = 8}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 141349.png}
\end{figure}

\begin{itemize}
\item k = 8 is chosen because:
\begin{itemize}
\item In the elbow plot, the drop in inertia slows after k = 8.
\item In the silhouette plot, score is still good at k = 8.
\item It balances clustering quality and cluster detail level.
\end{itemize}
\end{itemize}

\item \textbf{Visualize Clustering Results Using PCA (2D Projection).}

\begin{figure}[h]
    \centering
    \includegraphics[width = 5in, height = 2in]{Anh/Screenshot 2025-05-10 001356.png}
\end{figure}

\begin{itemize}
\item PCA (Principal Component Analysis) reduces the dataset to 2 main components to visualize complex, high-dimensional data in a 2D plot.
\item Each point in the scatter plot represents a player, colored by its assigned cluster.
\item This helps to visually assess how well the KMeans algorithm separated the data into clusters.
\end{itemize}
\end{enumerate}

\newpage

\subsection{4. Results}

\begin{itemize}
\item The code successfully loads and preprocesses the data.
\item It performs K-means clustering for various numbers of clusters.
\item It generates elbow and silhouette plots to aid in determining the optimal number of clusters.
\item It chooses k = 8 as the optimal number of clusters and provides a justification.
\item It reduces the data to 2 dimensions using PCA.
\item It visualizes the clusters in a 2D scatter plot.
\item Example :

\begin{figure}[h]
    \centering
    \includegraphics[width=6in, height=3.5in]{Anh/elbow_plot.png}
\end{figure}

\newpage

\begin{figure}[h]
    \centering
    \includegraphics[width=6in, height=3.5in]{Anh/silhouette_plot.png}
\end{figure}

\begin{figure}[h]
    \centering
    \includegraphics[width=6in, height=3.5in]{Anh/kmeans_clustering.png}
\end{figure}

\end{itemize}

\newpage

\section{PART IV -- PLAYER VALUE ESTIMATION}

\subsection{1. Assignment Requirements}

\begin{itemize}
    \item Collect player transfer values for the 2024-2025 season from \url{https://www.footballtransfers.com}. Note that only collect for the players whose playing time is greater than 900 minutes
    \item Propose a method for estimating player values. How do you select feature and model?
\end{itemize}

\subsection{2. Assignment Breakdown}

\textbf{Part 4.1: Collect player transfer values for the 2024-2025 season, only collect for the players whose playing time is greater than 900 minutes.}

\begin{itemize}
    \item Web Scraping: Extract player transfer values from the specified website.
    \item Data Filtering: Filter players based on the 900-minute threshold.
    \item Data Merging: Combine the transfer value data with the player statistics.
\end{itemize}

\textbf{Part 4.2: Estimating Player Transfer Values Using Linear Regression.}

\begin{itemize}
\item Feature Selection: Choose relevant features for the value estimation model.
\item Model Selection: Select an appropriate model for estimating player values.
\item Model Training: Train the chosen model on the data.
\item Model Evaluation: Evaluate the performance of the model.
\end{itemize}

\subsection{3. Solution Approach}

\textbf{Part 4.1 : Collect player transfer values for the 2024-2025 season, only collect for the players whose playing time is greater than 900 minutes.}

\begin{enumerate}
\item \textbf{Import necessary libraries.}

\begin{figure}[h]
    \centering
    \includegraphics[width= 2.5in, height = 1in]{Anh/Screenshot 2025-05-10 001443.png}
\end{figure}

\begin{itemize}
\item pandas: Used for storing and manipulating structured data (especially DataFrames).
\item BeautifulSoup: Parses and extracts information from HTML content.
\item selenium: Automates web browsing (used to open pages and get dynamic HTML).
\item time: Adds delays to ensure pages load properly.
\item rapidfuzz: Performs fuzzy string matching to handle inconsistent player name formats.
\item os: Interact with the operating system, check for file paths, create folders, and manage directories.
\end{itemize}

\item \textbf{Define the URL and Launch the Browser.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 145943.png}
\end{figure}

\begin{itemize}
\item Define the base URL where the player value data is located and initialize the Selenium Chrome browser.
\end{itemize}

\item \textbf{Scrape Premier League Player Transfer Values.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-06 150134.png}
\end{figure}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 143621.png}
\end{figure}

\begin{itemize}
\item Use Selenium and BeautifulSoup to scrape transfer value data from all 22 pages on FootballTransfers.com.
\item For each page, it loads the HTML, locates the target table, and extracts each player's name, club, and estimated value.
\item The data is collected into a list of dictionaries (players\_data), then converted into a pandas DataFrame (players\_value).
\end{itemize}

\newpage

\item \textbf{Load Data and Filter Players with Over 900 Minutes.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001531.png}
\end{figure}


\begin{itemize}
\item Load the player match statistics from the CSV file results.csv.
\item Filter only players who have played more than 900 minutes. Keep only selected columns, then reset the index of the filtered DataFrame.
\item Add a new column "Value" to the filtered DataFrame to later store the player's estimated transfer value.
\end{itemize}

\item \textbf{Match Player Names Using Fuzzy Matching.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 144627.png}
\end{figure}


\begin{itemize}
\item Loop through each player in the filtered list and use fuzzy string matching to find the closest name in the scraped transfer values. If the match score is above 80, assign the matched value to the "Value" column.
\end{itemize}

\item \textbf{Remove Unmatched Players and Finalize.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 144738.png}
\end{figure}


\begin{itemize}
\item Remove any players who couldn't be matched (i.e. have NaN in the "Value" column), then reset the index.
\end{itemize}

\newpage

\item \textbf{Save the Final Data to CSV.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001615.png}
\end{figure}


\begin{itemize}
\item Export the final cleaned dataset (players with over 900 minutes and matched values) to a new CSV file.
\end{itemize}
\end{enumerate}

\textbf{Part 4.2 : Estimating Player Transfer Values Using Linear Regression.}

\begin{enumerate}
\item \textbf{Import necessary libraries.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001649.png}
\end{figure}


\begin{itemize}
\item pandas: Used for storing and manipulating structured data (especially DataFrames).
\item numpy: Provides support for large arrays and matrices, along with mathematical functions.
\item matplotlib: A plotting library used to create static, animated, and interactive visualizations.
\item seaborn: Built on top of Matplotlib, it provides a high-level interface for creating statistical data visualizations.
\item StandardScaler (from sklearn.preprocessing): Scales features by removing the mean and scaling to unit variance, improving model performance.
\item train\_test\_split (from sklearn.model\_selection): Splits datasets into training and testing subsets for model evaluation.
\item LinearRegression (from sklearn.linear\_model): A machine learning model for predicting a dependent variable using a linear relationship with one or more independent variables.
\item mean\_absolute\_error, mean\_squared\_error, r2\_score (from sklearn.metrics): Metrics to evaluate regression model performance, measuring prediction accuracy and model fit.
\item os: Interact with the operating system, check for file paths, create folders, and manage directories.
\end{itemize}
\newpage
\item \textbf{Data Merging \& Cleaning.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001729.png}
\end{figure}


\begin{itemize}
\item data1 and data2 are merged based on the "Player" column to form a combined dataframe (df).
\item Players who have more than 900 minutes of playtime are selected for analysis.
\end{itemize}

\item \textbf{Preprocess Age Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 151038.png}
\end{figure}


\begin{itemize}
\item The "Age" column, originally in the format of years-days, is split into separate "Year" and "Day" columns, then used to calculate the player's age in years (with fractional days).
\end{itemize}

\item \textbf{Preprocess Value Data.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 151223.png}
\end{figure}


\begin{itemize}
\item The player value (column "Value") is cleaned by removing characters like "€" and "M", and then converted to float.
\end{itemize}
\newpage
\item \textbf{Replace Missing Values and Reset Index.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 151908.png}
\end{figure}


\begin{itemize}
\item Missing values marked as "N/a" are replaced with NaN for easier processing. Index is reset.
\end{itemize}

\item \textbf{Feature Engineering.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 152106.png}
\end{figure}


\begin{itemize}
\item Irrelevant columns and goalkeeper-specific stats are dropped.
\item All columns are converted to numeric type. Missing values are filled with the column mean.
\end{itemize}

\item \textbf{Calculate Correlation With Target.}

\begin{figure}[h]
    \centering
    \includegraphics[width=2.5in, height=1in]{Anh/Screenshot 2025-05-07 152225.png}
\end{figure}


\begin{itemize}
\item The correlation matrix is computed and the correlation of each feature with the target (Value) is extracted.
\end{itemize}

\newpage

\item \textbf{Select Features With Correlation $>$ 0.3, Identify Multicollinear Feature Pairs.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 152351.png}
\end{figure}


\begin{itemize}
\item Features with correlation $>$ 0.3 with Value are selected for modeling.
\item Upper triangle of the correlation matrix is used to detect highly correlated feature pairs.
\end{itemize}

\item \textbf{Drop One Feature From Each Highly Correlated Pair.}

\begin{figure}[h]
    \centering
    \includegraphics[width=4.3in, height=2.2in]{Anh/Screenshot 2025-05-07 152529.png}
\end{figure}

\begin{itemize}
\item In each highly correlated pair (correlation $>$ 0.9), the feature less correlated with Value is dropped.
\end{itemize}

\item \textbf{Remove Duplicate Dropped Features and Final List of Features.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-07 152743.png}
\end{figure}

\begin{itemize}
\item Removes duplicate entries from the list of features to drop.
\item Gets the final list of selected features after removing multicollinear ones.
\end{itemize}

\newpage

\item \textbf{Heatmap of Final Feature Correlation.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001820.png}
\end{figure}

\begin{itemize}
\item A heatmap is drawn to visualize the correlations between the remaining features.
\end{itemize}

\item \textbf{Standardize Features and Define Target.}

\begin{figure}[h]
    \centering
    \includegraphics[width=4in, height=1.3in]{Anh/Screenshot 2025-05-07 153112.png}
\end{figure}

\begin{itemize}
\item Features are scaled to have zero mean and unit variance to improve model performance.
\end{itemize}

\item \textbf{Train-Test Split, Train Linear Regression Model.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 002515.png}
\end{figure}

\begin{itemize}
\item Splits the data into 80\% training and 20\% testing sets.
\item Fits the linear regression model to training data.
\end{itemize}
\newpage
\item \textbf{Evaluation and Output.}

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 001910.png}
\end{figure}

\begin{itemize}
\item Predictions on the test set are saved along with actual values into a CSV file.
\item Calculates MAE, MSE, and R² metrics to evaluate model performance.
\begin{itemize}
\item \textbf{MAE}: Average error magnitude (e.g. €12.07M)
\item \textbf{MSE}: Squared error (more sensitive to large errors)
\item \textbf{R² Score}: Proportion of variance explained by the model (e.g. 0.615 = 61.5%)
\end{itemize}
\item Displays how well the model predicts player values.
\end{itemize}
\end{enumerate}
\newpage
\subsection{4. Results}

\textbf{Part 4.1: Collect player transfer values for the 2024-2025 season, only collect for the players whose playing time is greater than 900 minutes.}

\begin{itemize}
\item The code successfully scrapes player transfer values.
\item It merges this data with player statistics, handling potential name discrepancies with fuzzy matching.
\item It saves the merged data to a CSV file.
\item Example :

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/Screenshot 2025-05-10 002010.png}
\end{figure}
\end{itemize}

\textbf{Part 4.2: Estimating Player Transfer Values Using Linear Regression.}

\begin{itemize}
    \item The code selects relevant features for predicting player values, addressing multicollinearity.
    \item It trains a Linear Regression model.
    \item It evaluates the model's performance, providing MAE, MSE, and R² scores.
\item Example :
\newpage

\begin{figure}[h]
    \centering
    \includegraphics[width=\linewidth]{Anh/heatmap_of_correlations.png}
\end{figure}
\begin{figure}[h]
    \centering
    \includegraphics[width=2.5in, height=0.6in]{Anh/Screenshot 2025-05-09 232037.png}
\end{figure}

\newpage

\section{CONCLUSION}
This project provided a valuable opportunity to explore the intersection of data science and sports analytics through a structured analysis of English Premier League players during the 2024–2025 season. By following a multi-step process - from data collection to predictive modeling - I was able to apply a broad range of Python-based tools and techniques to extract insights and generate meaningful outcomes.\\
In Part I, player statistics were gathered using web scraping methods and compiled into a unified dataset. Part II involved statistical analysis, where key performance indicators were computed, visualized, and interpreted to highlight individual and team performances. Part III applied machine learning clustering techniques to classify players into distinct groups based on performance metrics, with dimensionality reduction providing a clear visual representation of player clusters.\\ Finally, in Part IV, I integrated external market data to build a linear regression model that estimates player market values based on selected features, achieving a moderate predictive performance.\\
This assignment not only reinforced my technical skills in data processing, visualization, and modeling, but also enhanced my ability to think critically about real-world data challenges. While the valuation model demonstrates potential, it also highlights the limitations of relying solely on performance statistics to capture market value - underscoring the influence of external, qualitative factors in player transfers.\\
In conclusion, this project successfully combined theoretical knowledge with practical implementation, and has deepened my understanding of both Python programming and data science applications in the context of professional sports.\\
I would like to thank my teacher for their guidance throughout this assignment, as well as my friends and classmates for their support and valuable discussions. Their encouragement helped me stay motivated and complete this project successfully.\\
Thank you very much!
\end{document}

